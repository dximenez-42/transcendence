version: '3.8'

services:
  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend:/usr/share/nginx/html
    ports:
      - "80:80"
    networks:
      - backend
    depends_on:
      - auth-backend

  auth-backend:
    container_name: auth-backend
    build:
      context: ./backend/auth
    command: gunicorn auth.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./backend/auth:/app
    networks:
      - backend
      - database
    depends_on:
      - db
    env_file:
      - .env

  games-backend:
    container_name: games-backend
    build:
      context: ./backend/games
    command: gunicorn games.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./backend/games:/app
    networks:
      - backend
      - database
    depends_on:
      - db
    env_file:
      - .env

  db:
    container_name: db
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - database
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./postgres/pgadmin/servers.json:/pgadmin4/servers.json
    ports:
      - "5050:80"
    networks:
      - database
    depends_on:
      - db

networks:
  backend:
    driver: bridge
  database:
    driver: bridge

volumes:
  pgdata:
    name: pgdata
  pgadmin_data:
    name: pgadmin_data
